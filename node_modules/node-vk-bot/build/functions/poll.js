"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var rq = require("request-promise-native");
var DEFAULT_DELAY = 334;
var sleep = function (ms) { return new Promise(function (resolve) { return setTimeout(resolve, ms); }); };
function poll(bot, delay) {
    if (delay === void 0) { delay = DEFAULT_DELAY; }
    return bot.api('messages.getLongPollServer')
        .then(function (res) {
        return request("https://" + res.server + "?act=a_check&key=" + res.key +
            ("&wait=25&mode=2&version=1&ts=" + res.ts), delay);
    })
        .catch(function (error) {
        bot.emit('poll-error', error);
        return poll(bot, delay);
    });
    function request(url, delay) {
        return rq(url, { json: true })
            .then(function (res) {
            if (!res || !res.ts || res.failed)
                throw new Error("response of the Long Poll server isn't valid " +
                    ("(" + JSON.stringify(res) + ")"));
            url = url.replace(/ts=.*/, "ts=" + res.ts);
            if (res.updates.length > 0) {
                for (var i = 0; i < res.updates.length; i++) {
                    var update = res.updates[i];
                    if (update[0] === 4)
                        bot.emit('update', update);
                }
            }
            if (bot._stop)
                return null;
            return sleep(delay).then(function () { return request(url, delay); });
        });
    }
}
exports.default = poll;
